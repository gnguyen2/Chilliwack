"""message explaining changes

Revision ID: 78c1a717842e
Revises: 6af0db188036
Create Date: 2025-03-18 00:30:43.427975

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mssql

# revision identifiers, used by Alembic.
revision = '78c1a717842e'
down_revision = '6af0db188036'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('form_responses')
    with op.batch_alter_table('rcl_responses', schema=None) as batch_op:
        batch_op.add_column(sa.Column('student_name', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('ps_id', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('student_signature', sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column('submission_date', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('academic_difficulty', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('initial_adjustment_issues', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('initial_adjustment_explanation', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('improper_course_level_placement', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('iclp_class1', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('iclp_professor1', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('iclp_professor_signature1', sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column('iclp_date1', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('iclp_class2', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('iclp_professor2', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('iclp_professor_signature2', sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column('iclp_date2', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('medical_reason', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('medical_letter_attached', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('final_semester', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('final_semester_hours_needed', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('concurrent_enrollment', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('concurrent_university_name', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('concurrent_hours_uh', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('concurrent_hours_other', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('concurrent_proof_attached', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('semester_fall', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('semester_spring', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('drop_courses', sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column('remaining_hours_uh', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('advisor_name', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('advisor_signature', sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column('advisor_date', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('isss_signature', sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column('isss_date', sa.DateTime(), nullable=True))
        batch_op.drop_column('field1')
        batch_op.drop_column('field3')
        batch_op.drop_column('field2')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('rcl_responses', schema=None) as batch_op:
        batch_op.add_column(sa.Column('field2', sa.VARCHAR(length=255, collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('field3', sa.VARCHAR(collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('field1', sa.VARCHAR(length=255, collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=True))
        batch_op.drop_column('isss_date')
        batch_op.drop_column('isss_signature')
        batch_op.drop_column('advisor_date')
        batch_op.drop_column('advisor_signature')
        batch_op.drop_column('advisor_name')
        batch_op.drop_column('remaining_hours_uh')
        batch_op.drop_column('drop_courses')
        batch_op.drop_column('semester_spring')
        batch_op.drop_column('semester_fall')
        batch_op.drop_column('concurrent_proof_attached')
        batch_op.drop_column('concurrent_hours_other')
        batch_op.drop_column('concurrent_hours_uh')
        batch_op.drop_column('concurrent_university_name')
        batch_op.drop_column('concurrent_enrollment')
        batch_op.drop_column('final_semester_hours_needed')
        batch_op.drop_column('final_semester')
        batch_op.drop_column('medical_letter_attached')
        batch_op.drop_column('medical_reason')
        batch_op.drop_column('iclp_date2')
        batch_op.drop_column('iclp_professor_signature2')
        batch_op.drop_column('iclp_professor2')
        batch_op.drop_column('iclp_class2')
        batch_op.drop_column('iclp_date1')
        batch_op.drop_column('iclp_professor_signature1')
        batch_op.drop_column('iclp_professor1')
        batch_op.drop_column('iclp_class1')
        batch_op.drop_column('improper_course_level_placement')
        batch_op.drop_column('initial_adjustment_explanation')
        batch_op.drop_column('initial_adjustment_issues')
        batch_op.drop_column('academic_difficulty')
        batch_op.drop_column('submission_date')
        batch_op.drop_column('student_signature')
        batch_op.drop_column('ps_id')
        batch_op.drop_column('student_name')

    op.create_table('form_responses',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('request_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('field1', sa.VARCHAR(length=255, collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=True),
    sa.Column('field2', sa.VARCHAR(length=255, collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=True),
    sa.Column('field3', sa.VARCHAR(collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=True),
    sa.Column('is_finalized', mssql.BIT(), autoincrement=False, nullable=True),
    sa.Column('last_updated', sa.DATETIME(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['request_id'], ['request.id'], name='FK__form_resp__reque__51300E55'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='FK__form_resp__user___503BEA1C'),
    sa.PrimaryKeyConstraint('id', name='PK__form_res__3213E83F4F0B9D62')
    )
    # ### end Alembic commands ###
